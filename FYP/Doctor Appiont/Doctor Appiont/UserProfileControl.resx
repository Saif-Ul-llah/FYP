<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>